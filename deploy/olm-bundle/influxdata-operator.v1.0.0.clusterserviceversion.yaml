apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: influxdata-operator.v1.0.0
  namespace: placeholder
  annotations:
    alm-examples: >-
      [{"apiVersion":"influxdata.com/v1alpha1","kind":"Backup","metadata":{"name":"influxdb-backup"},"spec":{"podname":"influxdb-0","containername":"influxdb","databases":null,"shard":null,"retention":null,"start":null,"end":null,"since":null,"storage":{"provider":"gcs","s3":{"aws_key_id":{"valueFrom":{"secretKeyRef":{"name":"influxdb-backup-s3","key":"awsAccessKeyId"}}},"aws_secret_key":{"valueFrom":{"secretKeyRef":{"name":"influxdb-backup-s3","key":"awsSecretAccessKey"}}},"bucket":"influxdb-backup-restore","folder":"backup","region":"us-west-2"},"gcs":{"sa_json":{"valueFrom":{"secretKeyRef":{"name":"influxdb-backup-gcs","key":"sa"}}},"bucket":"influxdb-backup-restore","folder":"backup"}}}},{"apiVersion":"influxdata.com/v1alpha1","kind":"Influxdb","metadata":{"name":"influxdb"},"spec":{"size":1,"baseImage":"influxdb:1.6.3-alpine","imagePullPolicy":"Always","pod":{"resources":{"limits":{"cpu":8,"memory":"16Gi"},"requests":{"cpu":0.1,"memory":"256Mi"}},"persistentVolumeClaim":{"metadata":{"name":"influxdb-data-pvc"},"spec":{"accessModes":["ReadWriteOnce"],"storageClassName":"standard-resize","resources":{"requests":{"storage":"8Gi"}}}}}}},{"apiVersion":"influxdata.com/v1alpha1","kind":"Restore","metadata":{"name":"influxdb-restore"},"spec":{"backupId":"20190105223039","podname":"influxdb-0","containername":"influxdb","database":"testdb","restoreTo":null,"rp":null,"newRp":null,"shard":null,"storage":{"provider":"gcs","s3":{"aws_key_id":{"valueFrom":{"secretKeyRef":{"name":"influxdb-backup-s3","key":"awsAccessKeyId"}}},"aws_secret_key":{"valueFrom":{"secretKeyRef":{"name":"influxdb-backup-s3","key":"awsSecretAccessKey"}}},"bucket":"influxdb-backup-restore","folder":"backup","region":"us-west-2"},"gcs":{"sa_json":{"valueFrom":{"secretKeyRef":{"name":"influxdb-backup-gcs","key":"sa"}}},"bucket":"influxdb-backup-restore","folder":"backup"}}}}]
    categories: Monitoring
    certified: 'false'
    description: A Kubernetes operator to manage InfluxDB instances.
    containerImage: 'docker.io/dmesser/influxdb-operator:v1.0.0'
    support: ''
    capabilities: Full Lifecycle
    repository: 'https://github.com/influxdata/influxdata-operator'
spec:
  displayName: InfluxDB Operator
  description: >
    ## About InfluxDB


    InfluxDB is the open source time series database that is part of the TICK
    (Telegraf, InfluxDB, Chronograf, Kapacitor) stack. It is designed to handle
    high write and query loads and provides a SQL-like query language called
    InfluxQL for interacting with data.

    ## About this Operator


    This Operator is built using the [Operator
    SDK](https://github.com/operator-framework/operator-sdk), which is part of
    the [Operator Framework](https://github.com/operator-framework/) and manages
    one or more InfluxDB instances deployed on Kubernetes.


    ## Prerequisites for enabling this Operator


    ## Usage


    The first step is to deploy a pvc backed by a persisten volume where the
    InfluxDB data will be stored. Next you will deploy one file that will
    install the Operator, and install the manifest for InfluxDB.


    ### Persistent Volumes


    The InfluxDB Operator supports the use of Persistent Volumes for each node
    inthe InfluxDB cluster.


    If deploying on GKE clusters see
    [gcp_storageclass.yaml](https://github.com/influxdata/influxdata-operator/blob/master/deploy/gcp_storageclass.yaml).


    If deploying on EKS clusters see
    [aws_storageclass.yaml](https://github.com/influxdata/influxdata-operator/blob/master/deploy//aws_storageclass.yaml).


    If deploying on AKS clusters see
    [azure_storageclass.yaml](https://github.com/influxdata/influxdata-operator/blob/master/deploy//azure_storageclass.yaml).


    If deploying on Local Workstation  see
    [local_storage.yaml](https://github.com/influxdata/influxdata-operator/blob/master/deploy//local_storage.yaml).


    Please refer to the Openshift section for the storage on OCP (Openshift
    Container Platform). There are many types of storage class that OCP
    supports. 


    The storage class created by each file supports resize of the persistent
    volume. 

    Note: Resize is only supperted on Kubernetes 1.11 and higher. [Persistent
    Volume
    Resize](https://kubernetes.io/blog/2018/07/12/resizing-persistent-volumes-using-kubernetes/)
  maturity: stable
  version: v1.0.0
  replaces: ''
  minKubeVersion: 1.11.0
  keywords:
    - Monitoring
  maintainers:
    - name: Contact
      email: contact@influxdb.com
  provider:
    name: InfluxData
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: GitHub
      url: 'https://github.com/influxdata/influxdata-operator'
    - name: README
      url: 'https://github.com/influxdata/influxdata-operator/blob/master/README.md'
  icon:
    - base64data: >-
        
      mediatype: image/svg+xml
  customresourcedefinitions:
    owned:
      - name: backups.influxdata.com
        displayName: InfluxDB Backup
        kind: Backup
        version: v1alpha1
        description: >-
          Creates a backup of your InfluxDB instance from a Storage provider of
          your choice.
        resources:
          - version: v1
            kind: Job
        specDescriptors: []
        statusDescriptors: []
      - name: influxdbs.influxdata.com
        displayName: Influxdb
        kind: Influxdb
        version: v1alpha1
        description: An InfluxDB deployment
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
          - version: v1
            kind: StatefulSet
        specDescriptors: []
        statusDescriptors: []
      - name: restores.influxdata.com
        displayName: Restore
        kind: Restore
        version: v1alpha1
        description: Restores an InfluxDB backup from a given storage provider.
        resources:
          - version: v1
            kind: Job
        specDescriptors: []
        statusDescriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      permissions:
        - serviceAccountName: influxdata-operator
          rules:
            - apiGroups:
                - ''
              resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                - pods/attach
                - pods/exec
                - namespaces
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - '*'
            - apiGroups:
                - influxdata.com
              resources:
                - '*'
              verbs:
                - '*'
      clusterPermissions: []
      deployments:
        - name: influxdata-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: influxdata-operator
            template:
              metadata:
                labels:
                  name: influxdata-operator
              spec:
                serviceAccountName: influxdata-operator
                containers:
                  - name: influxdata-operator
                    image: 'docker.io/dmesser/influxdb-operator:v1.0.0'
                    ports:
                      - containerPort: 60000
                        name: metrics
                    command:
                      - influxdata-operator
                    imagePullPolicy: Always
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                      - name: OPERATOR_NAME
                        value: influxdata-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: true
